/*
// $Id$
// Enki generates and implements the JMI and MDR APIs for MOF metamodels.
// Copyright (C) 2009 The Eigenbase Project
// Copyright (C) 2009 SQLstream, Inc.
// Copyright (C) 2009 Dynamo BI Corporation
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation; either version 2.1 of the License, or (at
// your option) any later version.
// 
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
*/
package org.eigenbase.enki.test.performance;

import java.net.*;

import javax.jmi.xmi.*;

import org.eigenbase.enki.test.*;
import org.junit.*;
import org.netbeans.api.mdr.*;
import org.netbeans.api.xmi.*;

/**
 * ImportPerformanceTest tests the performance of importing a large XMI file.
 * It uses the XMI file generated by
 * {@link BackupRestoreLargeDataSetTest#main(String[])}.
 * 
 * @author Stephan Zuercher
 */
public class ImportPerformanceTest extends SampleModelTestBase
{
    @Test
    public void test() throws Exception
    {
        URL importSource = 
            BackupRestoreLargeDataSetTest.class.getResource(
                "BackupRestoreLargeDataSet.xmi");
        
        long start = System.currentTimeMillis();
        importXmi(importSource);
        long end = System.currentTimeMillis();
        
        System.out.println((end -start) + " ms");
    }
    
    private static void importXmi(URL xmi) throws Exception
    {
        MDRepository mdrRepos = getRepository();

        XmiReader xmiReader = XMIReaderFactory.getDefault().createXMIReader();
        boolean rollback = false;
        try {
            mdrRepos.beginTrans(true);
            rollback = true;
            
            xmiReader.read(xmi.toString(), getPackage());
            
            rollback = false;
            mdrRepos.endTrans();
        } finally {
            if (rollback) {
                mdrRepos.endTrans(true);
            }
        }
    }
}

// End ImportPerformanceTest.java
